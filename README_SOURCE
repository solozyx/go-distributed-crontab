go-distributed-crontab/Go语言实现分布式crontab
    |
    |--master/分布式master节点cmd
        |--master.go
            |master节点启动 根据机器CPU设置运行线程数 命令行参数
        |--master.json
            |分布式master节点配置文件
        |--webroot/ 网站静态资源根目录
            |--index.html
            |jquery.min.js bootstrap.min.css bootstrap.min.js
            |ajax请求
            |管理后台页面实现 对etcd集群的CRUD操作 管理 /cron/jobs/ 任务
    |--worker/分布式worker节点cmd
        |--worker.go
            |worker节点启动
        |--worker.json
            |分布式worker节点配置文件
    |--src/
        |--master/分布式master节点
            |
            |--ApiServer.go
                |http server 模块的单例模式 初始化HTTP服务 go func(){}()协程监听客户端访问 任务job保存到etcd中 handleJobSave
                |http POST请求提交任务解析POST表单 http response API封装 interface{}空接口灵活使用
                |配置网站静态页面路由
            |--Config.go
                |--配置文件master.json解析 struct标签语法 json反序列化 配置单例
            |--JobMgr.go
                |--对etcd集群的CRUD操作 管理 /cron/jobs/ 和 /cron/killer/ 任务
            |--LogMgr.go
                |--查询mongodb日志记录
        |--worker/分布式worker节点
            |
            |--Config.go
                |--worker节点部署配置
            |--JobMgr.go
                |--worker节点job任务管理
            |--Scheduler.go
                |--调度协程 同步etcd任务到调度列表 jobPlanTable
                   执行任务 jobExecutingTable map的并发去重
                   Executor执行shell 通过channel 回传执行结果给 Scheduler 协程间通信用channel
            |--Executor.go
                |--在分布式集群中防止任务并发调度
            |--JobLock.go
                |--etcd事务TXN机制实现分布式乐观锁
            |--LogSink.go
                |--shell执行标准输出 标准错误输出 写入mongodb 定时器time.Timer的时候
            |--RegisterETCD.go
                |--worker节点服务注册到etcd
        |--common/共享工具类
            |--Protocol.go
                |http应答 工具方法
            |--Constants.go
                |常量包 增强语义 便于维护